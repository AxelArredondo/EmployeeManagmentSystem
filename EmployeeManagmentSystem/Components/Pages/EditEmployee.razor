@page "/employees"
@using EmployeeManagmentSystem.Models
@using Microsoft.EntityFrameworkCore
@inject EmployeeManagmentSystem.Data.ApplicationDbContext Db
@inject NavigationManager Navigation

<h2>Welcome</h2>

<div class="d-flex gap-2 mb-3">
    <input class="form-control" @bind="searchTerm" placeholder="Search Employee 🔍" />
    <input class="form-control" placeholder="Filter by:" disabled />
    <button class="btn btn-primary" @onclick="GoToAddEmployee">Add New Employee</button>
</div>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else if (!FilteredEmployees.Any())
{
    <p>No employees found.</p>
}
else
{
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Department</th>
                <th>Date Hired</th>
                <th>Hourly Wage</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in FilteredEmployees)
            {
                <tr>
                    <td>@emp.Id</td>
                    <td>@emp.Name</td>
                    <td>@emp.Department</td>
                    <td>@emp.DateHired.ToString("yyyy-MM-dd")</td>
                    <td>@($"{emp.HourlyWage}$")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Employee>? employees;
    private string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        employees = await Db.Employees.ToListAsync();
    }

    private List<Employee> FilteredEmployees =>
        string.IsNullOrWhiteSpace(searchTerm)
            ? employees!
            : employees!.Where(e =>
                e.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();

    private void GoToAddEmployee()
    {
        Navigation.NavigateTo("/add-employee");
    }
}
